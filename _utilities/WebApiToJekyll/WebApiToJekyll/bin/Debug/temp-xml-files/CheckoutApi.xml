<?xml version="1.0" encoding="utf-8"?>
<api xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.w3schools.com ../WebApiDocumentation.xsd">
    <name>Checkout API</name>
      <endpoints>
	  		<endpoint>
            <url>DonationEditor/{PartId}</url>
            <method>GET</method>
            <summary>Get the information that is configured on ADF Part to open checkout popup.</summary>
                        <parameters>
                <parameter>
                    <name>PartId</name>
                    <type>Integer</type>
                    <required>true</required>
                    <description>Id of a donation form part.</description>
                </parameter>
            </parameters>
            <responses>
                <response>
                    <status>200 OK</status>
                    <body>Object</body>
                    <description>Return an object containing editor information.</description>
                </response>
            </responses>
            <exampleResponses>

                <exampleResponse>
                    <name>Success</name>
                    <status>200 OK</status>
                    <body>
                        <![CDATA[
{
"MerchantAccountID":"00000000-0000-0000-0000-000000000000",
"UseMasterPass":true,
"UseVisaPass":true,
"UseApplePay":true,
"PrimaryFontColor":"#000000",
"SecondaryFontColor":"#000000",
"FontType":"roboto",
"MACheckoutSupported":true,
"DataKey":"00000000-0000-0000-0000-000000000000",
"RecaptchRequired":false
}
												]]>
                    </body>
                </exampleResponse>
            </exampleResponses>
            <responses>
                <response>
					<status>400 Bad Request</status>
                    <body>Error[]</body>
                </response>
</responses>				

	   </endpoint>
    <endpoint>
      <url>ADFCheckout/Create</url>
      <method>POST</method>
      <behavior>If the payment checkout pop up is configured on ADF and we click on donate button, after the checkout is loaded on the page, the donation transaction is added in the database and the state will be "pending".</behavior>
      <post>
        <fields>
          <field>
            <name>Donor</name>
            <required>true</required>
			<type>Object</type>
            <description>Information about the donor of the gift. Donor and all attributes related to the donor (ex: Donor.Title) should be excluded if the donation form uses a Payment 2.0 part.</description>
          </field>
          <field>
            <name>Donor.Title</name>
            <type>String</type>
          </field>
          <field>
            <name>Donor.FirstName</name>
            <type>String</type>
            <maxLength>30</maxLength>
          </field>
          <field>
            <name>Donor.LastName</name>
            <type>String</type>
            <required>true</required>
            <maxLength>60</maxLength>
          </field>
          <field>
            <name>Donor.EmailAddress</name>
            <type>String</type>
            <required>true</required>
            <maxLength>120</maxLength>
          </field>
          <field>
            <name>Donor.Phone</name>
            <type>String</type>
          </field>
          <field>
            <name>Donor.Address</name>
            <required>true</required>
            <description>Address information about the donor.</description>
          </field>
          <field>
            <name>Donor.Address.StreetAddress</name>
            <type>String</type>
            <required>true</required>
          </field>
          <field>
            <name>Donor.Address.City</name>
            <type>String</type>
            <required>true</required>
            <maxLength>50</maxLength>
          </field>
          <field>
            <name>Donor.Address.State</name>
            <type>String</type>
            <required>true</required>
          </field>
          <field>
            <name>Donor.Address.Country</name>
            <type>String</type>
            <required>true</required>
            <description>In order for Blackbaud Secure Payments to pre-populate international billing addresses, this value should be the full country description specified in CRM.</description>
          </field>
          <field>
            <name>Donor.Address.PostalCode</name>
            <type>String</type>
            <required>true</required>
            <maxLength>10</maxLength>
          </field>
          <field>
            <name>Donor.OrganizationName</name>
            <type>String</type>
            <description>Required if Gift.IsCorporate is true. This field is not valid if the part is configured to use a Payment 2.0 page.</description>
            <maxLength>60</maxLength>
          </field>
          <field>
            <name>Gift</name>
            <required>true</required>
            <description>Information about the donation gift.</description>
          </field>
          <field>
            <name>Gift.IsAnonymous</name>
            <type>Boolean</type>
            <description>Indicates that the gift is being made anonymously.</description>
            <default>false</default>
          </field>
          <field>
            <name>Gift.FinderNumber</name>
            <type>Long</type>
          </field>
          <field>
            <name>Gift.SourceCode</name>
            <type>String</type>
            <maxLength>50</maxLength>
          </field>
          <field>
            <name>Gift.PaymentMethod</name>
            <type>PaymentMethod ENUM</type>
            <required>true</required>
            <description>
              <![CDATA[Indicates the method of payment to be used for the gift.  Possible values:
<ul>
  <li>CreditCard (0)</li>
  <li>BillMeLater (1)</li>
  <li>DirectDebit (2)</li>
</ul>]]>
            </description>
          </field>
          <field>
            <name>Gift.Comments</name>
            <type>String</type>
            <maxLength>255</maxLength>
          </field>
          <field>
            <name>Gift.CreateGiftAidDeclaration</name>
            <type>Boolean</type>
            <description>Indicates whether the gift aid is applied to the donation.</description>
            <default>false</default>
          </field>
          <field>
            <name>Gift.Designations</name>
            <type>Array</type>
            <required>true</required>
            <description>Array of designation objects for the gift.</description>
          </field>
          <field>
            <name>Gift.Designations.Amount</name>
            <type>Decimal</type>
            <required>true</required>
            <description>The numeric amount of the designation.  The currency is dictated by the merchant account specified.</description>
          </field>
          <field>
            <name>Gift.Designations.DesignationId</name>
            <type>GUID</type>
            <required>true</required>
            <description>Id of a designation to which the amount should be allocated.</description>
          </field>
          <field>
            <name>Gift.Attributes</name>
            <type>Array</type>
            <description>Array of revenue attributes to be added to the gift.</description>
          </field>
          <field>
            <name>Gift.Attributes.AttributeId</name>
            <type>GUID</type>
            <required>true</required>
            <description>Id of revenue attribute.  The only supported attribute data types are text, number, date, currency, yes/no, and code table.  Only one per record attribute types are supported, except for code table attributes which support multiple entries per record.  Any individual attribute id can only be supplied once for a donation.</description>
          </field>
          <field>
            <name>Gift.Attributes.Value</name>
            <type>String</type>
            <required>true</required>
            <description>Value of the attribute.  For code table values, the name of the code table entry should be used.  For Multiple code table entries, use a single attribute with the names semicolon delimited in the value field.</description>
          </field>
          <field>
            <name>Gift.Recurrence.DayOfWeek</name>
            <type>DayOfWeek ENUM</type>
            <description>
              <![CDATA[DayOfWeek value is required for weekly recurrences.  Field is invalid for any frequency other than weekly.  Possible values:
<ul>
  <li>Sunday (0)</li>
  <li>Monday (1)</li>
  <li>Tuesday (2)</li>
  <li>Wednesday (3)</li>
  <li>Thursday (4)</li>
  <li>Friday (5)</li>
  <li>Saturday (6)</li>
</ul>
                        ]]>
            </description>
          </field>
          <field>
            <name>Gift.Recurrence.DayOfMonth</name>
            <type>Integer</type>
            <description>DayOfMonth value is required for non-weekly recurrences.  Field is invalid for weekly frequency.  Valid values: 1-31.  Months with less than 31 days will default to the last day of the month is DayOfMonth is higher than number of days in the month.</description>
          </field>
          <field>
            <name>Gift.Recurrence.Month</name>
            <type>Integer</type>
            <description>Month value is required for annual recurrences.  Field is invalid for any frequency other than annually.  Valid values:  1-12; Jan-Dec.</description>
          </field>
          <field>
            <name>Gift.Recurrence.Frequency</name>
            <type>RecurrenceFrequency ENUM</type>
            <required>true</required>
            <description>
              <![CDATA[Designates the recurrence frequency. "Weekly" cannot be used with pledge installments. Possible values:
<ul>
  <li>Weekly (1)</li>
  <li>Monthly (2)</li>
  <li>Quarterly (3)</li>
  <li>Annually (4)</li>
<li>Every4Weeks (7)</li>
</ul>
]]>
            </description>
          </field>
          <field>
            <name>Gift.Recurrence.StartDate</name>
            <type>Date</type>
            <required>true</required>
            <description>Start date for recurrence.  Must start on or after today's date.</description>
          </field>
          <field>
            <name>Gift.Recurrence.EndDate</name>
            <type>Date</type>
            <description>Optional end date for recurrence.  Must end after start date.</description>
          </field>
          <field>
            <name>Gift.PledgeInstallment.InstallmentAmount</name>
            <type>Date</type>
            <description>An installment amount is required for a pledge or pledge installment payment.</description>
          </field>
          <field>
            <name>Gift.PledgeInstallment.NumberOfInstallments</name>
            <type>Date</type>
            <description>The number of installments is required for a pledge installment payment.</description>
          </field>
          <field>
            <name>Gift.Tribute.TributeID</name>
            <type>GUID</type>
            <description>Optional Tribute ID to map to.  Must match Tribute ID from backoffice.</description>
          </field>
          <field>
            <name>Gift.Tribute.TributeDefinition.FirstName</name>
            <type>String</type>
            <description>First name for new tribute definition.</description>
          </field>
          <field>
            <name>Gift.Tribute.TributeDefinition.LastName</name>
            <type>String</type>
            <required>true</required>
            <description>Last name for new tribute definition.</description>
          </field>
          <field>
            <name>Gift.Tribute.TributeDefinition.Type</name>
            <type>String</type>
            <required>true</required>
            <description>Tribute type to map to in backoffice.  Must match existing tribute type.</description>
          </field>
          <field>
            <name>Gift.Tribute.TributeDefinition.Description</name>
            <type>String</type>
            <required>true</required>
            <description>Description for new tribute definition.</description>
          </field>
          <field>
            <name>Gift.Tribute.Acknowledgee.FirstName</name>
            <type>String</type>
            <description>First name for tribute acknowledgee.</description>
          </field>
          <field>
            <name>Gift.Tribute.Acknowledgee.LastName</name>
            <type>String</type>
            <required>true</required>
            <description>Last name for tribute acknowledgee.</description>
          </field>
          <field>
            <name>Gift.Tribute.Acknowledgee.Country</name>
            <type>String</type>
            <required>true</required>
            <description>Country for tribute acknowledgee address.</description>
          </field>
          <field>
            <name>Gift.Tribute.Acknowledgee.AddressLines</name>
            <type>String</type>
            <required>true</required>
            <description>Address lines for tribute acknowledgee address.</description>
          </field>
          <field>
            <name>Gift.Tribute.Acknowledgee.City</name>
            <type>String</type>
            <required>true</required>
            <description>City for tribute acknowledgee address.</description>
          </field>
          <field>
            <name>Gift.Tribute.Acknowledgee.State</name>
            <type>String</type>
            <required>true</required>
            <description>State for tribute acknowledgee address.</description>
          </field>
          <field>
            <name>Gift.Tribute.Acknowledgee.PostalCode</name>
            <type>String</type>
            <required>true</required>
            <description>Postal code for tribute acknowledgee address.</description>
          </field>
          <field>
            <name>Gift.Tribute.Acknowledgee.Phone</name>
            <type>String</type>
            <description>Phone number for tribute acknowledgee.</description>
          </field>
          <field>
            <name>Gift.Tribute.Acknowledgee.Email</name>
            <type>String</type>
            <description>Email address for tribute acknowledgee.</description>
          </field>
          <field>
            <name>Gift.IsCorporate</name>
            <type>Boolean</type>
            <description>Indicates that the gift is given on behalf of a company. When true, the Corporate merge fields are displayed as opposed to the Individual merge fields. Cannot process if Donation Form is using a Payment 2.0 Part.</description>
          </field>
          <field>
            <name>Origin</name>
            <required>true</required>
            <description>Information about the origin of the transaction.</description>
          </field>
          <field>
            <name>Origin.AppealId</name>
            <type>GUID</type>
            <description>Id of an appeal to associate with the donation.</description>
          </field>
          <field>
            <name>Origin.PageId</name>
            <type>Integer</type>
            <description>Id of the BBIS page hosting the donation form.</description>
          </field>
          <field>
            <name>Origin.PageName</name>
            <type>String</type>
            <required>true</required>
            <description>Name of the web page hosting the donation form.</description>
          </field>
          <field>
            <name>BBSPReturnUri</name>
            <type>String</type>
            <description>The Uri that Blackbaud secured payment should redirect to after completing the payment.  Required for credit card transactions. Exclude if Donation Form is using a Payment 2.0 Part.</description>
          </field>
          <field>
            <name>BBSPTemplateSitePageId</name>
            <type>Integer</type>
            <description>Id of the BBIS page that should be used as the page template in Blackbaud secured payment.  This page must contain certain BBSP-integrated part types for the page template to be usable, such as the Advanced Donation Form. Exclude if Donation Form is using a Payment 2.0 Part.</description>
          </field>
          <field>
            <name>MerchantAccountId</name>
            <type>GUID</type>
            <required>true</required>
            <description>Id of the merchant account that should be used to process the donation. Exclude if Donation Form is using a Payment 2.0 Part.</description>
          </field>
        </fields>
        <example>
          <![CDATA[
{
"Id": "00000000-0000-0000-0000-000000000000"
}
]]>
        </example>
      </post>
      <responses>
       
        <response>
          <status>200 OK</status>
          <body>CreateDonationReply</body>
          <description>Returns a CreateDonationReply object containing information about the created donation and optionally a Uri for completing payment of the donation with Blackbaud secured payment. A location header is also returned containing a Uri of the new donation object.  If the part is configured to use a Payment 2.0 page, the reply will contain a URI to the selected payment page instead of a secure payment URI.</description>
        </response>
      </responses>
      <exampleResponses>
        <exampleResponse>
          <name>Success</name>
          <status>201 OK</status>
          <location>http://www.mydomain.com/webapi/123/Donation/853f96be-bf08-4828-aefa-326a06e48d31</location>
          <body>
            <![CDATA[]]>
          </body>
        </exampleResponse>
		</exampleResponses>
		<responses>
		 <response>
          <status>400 Bad Request</status>
          <body>Error[]</body>
          <description>
            <![CDATA[A validation error was found with the post data or an error occurred in the processing.  Returns an array of Errror objects.  Possible Errors:
<ul>
<li>RecordNotFound (106)</li>
<li>RequiredFieldMissing (101)</li>
<li>InvalidFieldSupplied (102)</li>
<li>ValueBelowMinimum (103)</li>
<li>ValueExceedsMaximum (104)</li>
<li>ValueNotAllowed (105)</li>
<li>ExceedsMaximumLength (107)</li>
</ul>
]]>
          </description>
        </response>
		</responses>
		<exampleResponses>
        <exampleResponse>
          <name>Error</name>
          <status>400 Bad Request</status>
          <body>
            <![CDATA[
[
	{
		"ErrorCode":101,
		"Field":"Donor.LastName",
		"Message":null
	},
	{
		"ErrorCode":103,
		"Field":"Gift.Designations.Amount",
		"Message":"A designation's amount should be greater than 0."
	}
]
]]>
          </body>
        </exampleResponse>
      </exampleResponses>
    </endpoint>
    <endpoint>
      <url>ADFCheckout/Complete</url>
      <method>POST</method>
       <behavior>When the payment is completed by the checkout pop up then the previously added donation transaction will be marked as complete in the database, which were added at the time when pop up was loaded first time.</behavior>
      <post>
        <fields>
          <field>
            <name>Donor</name>
			<type>Object</type>
            <required>true</required>
            <description>Information about the donor of the gift. Donor and all attributes related to the donor (ex: Donor.Title) should be excluded if the donation form uses a Payment 2.0 part.</description>
          </field>
          <field>
            <name>Donor.Title</name>
            <type>String</type>
          </field>
          <field>
            <name>Donor.FirstName</name>
            <type>String</type>
            <maxLength>30</maxLength>
          </field>
          <field>
            <name>Donor.LastName</name>
            <type>String</type>
            <required>true</required>
            <maxLength>60</maxLength>
          </field>
          <field>
            <name>Donor.EmailAddress</name>
            <type>String</type>
            <required>true</required>
            <maxLength>120</maxLength>
          </field>
          <field>
            <name>Donor.Phone</name>
            <type>String</type>
          </field>
          <field>
            <name>Donor.Address</name>
            <required>true</required>
            <description>Address information about the donor.</description>
          </field>
          <field>
            <name>Donor.Address.StreetAddress</name>
            <type>String</type>
            <required>true</required>
          </field>
          <field>
            <name>Donor.Address.City</name>
            <type>String</type>
            <required>true</required>
            <maxLength>50</maxLength>
          </field>
          <field>
            <name>Donor.Address.State</name>
            <type>String</type>
            <required>true</required>
          </field>
          <field>
            <name>Donor.Address.Country</name>
            <type>String</type>
            <required>true</required>
            <description>In order for Blackbaud Secure Payments to pre-populate international billing addresses, this value should be the full country description specified in CRM.</description>
          </field>
          <field>
            <name>Donor.Address.PostalCode</name>
            <type>String</type>
            <required>true</required>
            <maxLength>10</maxLength>
          </field>
          <field>
            <name>Donor.OrganizationName</name>
            <type>String</type>
            <description>Required if Gift.IsCorporate is true. This field is not valid if the part is configured to use a Payment 2.0 page.</description>
            <maxLength>60</maxLength>
          </field>
          <field>
            <name>Gift</name>
            <required>true</required>
            <description>Information about the donation gift.</description>
          </field>
          <field>
            <name>Gift.IsAnonymous</name>
            <type>Boolean</type>
            <description>Indicates that the gift is being made anonymously.</description>
            <default>false</default>
          </field>
          <field>
            <name>Gift.FinderNumber</name>
            <type>Long</type>
          </field>
          <field>
            <name>Gift.SourceCode</name>
            <type>String</type>
            <maxLength>50</maxLength>
          </field>
          <field>
            <name>Gift.PaymentMethod</name>
            <type>PaymentMethod ENUM</type>
            <required>true</required>
            <description>
              <![CDATA[Indicates the method of payment to be used for the gift.  Possible values:
<ul>
  <li>CreditCard (0)</li>
  <li>BillMeLater (1)</li>
  <li>DirectDebit (2)</li>
</ul>]]>
            </description>
          </field>
          <field>
            <name>Gift.Comments</name>
            <type>String</type>
            <maxLength>255</maxLength>
          </field>
          <field>
            <name>Gift.CreateGiftAidDeclaration</name>
            <type>Boolean</type>
            <description>Indicates whether the gift aid is applied to the donation.</description>
            <default>false</default>
          </field>
          <field>
            <name>Gift.Designations</name>
            <type>Array</type>
            <required>true</required>
            <description>Array of designation objects for the gift.</description>
          </field>
          <field>
            <name>Gift.Designations.Amount</name>
            <type>Decimal</type>
            <required>true</required>
            <description>The numeric amount of the designation.  The currency is dictated by the merchant account specified.</description>
          </field>
          <field>
            <name>Gift.Designations.DesignationId</name>
            <type>GUID</type>
            <required>true</required>
            <description>Id of a designation to which the amount should be allocated.</description>
          </field>
          <field>
            <name>Gift.Attributes</name>
            <type>Array</type>
            <description>Array of revenue attributes to be added to the gift.</description>
          </field>
          <field>
            <name>Gift.Attributes.AttributeId</name>
            <type>GUID</type>
            <required>true</required>
            <description>Id of revenue attribute.  The only supported attribute data types are text, number, date, currency, yes/no, and code table.  Only one per record attribute types are supported, except for code table attributes which support multiple entries per record.  Any individual attribute id can only be supplied once for a donation.</description>
          </field>
          <field>
            <name>Gift.Attributes.Value</name>
            <type>String</type>
            <required>true</required>
            <description>Value of the attribute.  For code table values, the name of the code table entry should be used.  For Multiple code table entries, use a single attribute with the names semicolon delimited in the value field.</description>
          </field>
          <field>
            <name>Gift.Recurrence.DayOfWeek</name>
            <type>DayOfWeek ENUM</type>
            <description>
              <![CDATA[DayOfWeek value is required for weekly recurrences.  Field is invalid for any frequency other than weekly.  Possible values:
<ul>
  <li>Sunday (0)</li>
  <li>Monday (1)</li>
  <li>Tuesday (2)</li>
  <li>Wednesday (3)</li>
  <li>Thursday (4)</li>
  <li>Friday (5)</li>
  <li>Saturday (6)</li>
</ul>
                        ]]>
            </description>
          </field>
          <field>
            <name>Gift.Recurrence.DayOfMonth</name>
            <type>Integer</type>
            <description>DayOfMonth value is required for non-weekly recurrences.  Field is invalid for weekly frequency.  Valid values: 1-31.  Months with less than 31 days will default to the last day of the month is DayOfMonth is higher than number of days in the month.</description>
          </field>
          <field>
            <name>Gift.Recurrence.Month</name>
            <type>Integer</type>
            <description>Month value is required for annual recurrences.  Field is invalid for any frequency other than annually.  Valid values:  1-12; Jan-Dec.</description>
          </field>
          <field>
            <name>Gift.Recurrence.Frequency</name>
            <type>RecurrenceFrequency ENUM</type>
            <required>true</required>
            <description>
              <![CDATA[Designates the recurrence frequency. "Weekly" cannot be used with pledge installments. Possible values:
<ul>
  <li>Weekly (1)</li>
  <li>Monthly (2)</li>
  <li>Quarterly (3)</li>
  <li>Annually (4)</li>
  <li>Every4Weeks (7)</li>
</li>
]]>
            </description>
          </field>
          <field>
            <name>Gift.Recurrence.StartDate</name>
            <type>Date</type>
            <required>true</required>
            <description>Start date for recurrence.  Must start on or after today's date.</description>
          </field>
          <field>
            <name>Gift.Recurrence.EndDate</name>
            <type>Date</type>
            <description>Optional end date for recurrence.  Must end after start date.</description>
          </field>
          <field>
            <name>Gift.PledgeInstallment.InstallmentAmount</name>
            <type>Date</type>
            <description>An installment amount is required for a pledge or pledge installment payment.</description>
          </field>
          <field>
            <name>Gift.PledgeInstallment.NumberOfInstallments</name>
            <type>Date</type>
            <description>The number of installments is required for a pledge installment payment.</description>
          </field>
          <field>
            <name>Gift.Tribute.TributeID</name>
            <type>GUID</type>
            <description>Optional Tribute ID to map to.  Must match Tribute ID from backoffice.</description>
          </field>
          <field>
            <name>Gift.Tribute.TributeDefinition.FirstName</name>
            <type>String</type>
            <description>First name for new tribute definition.</description>
          </field>
          <field>
            <name>Gift.Tribute.TributeDefinition.LastName</name>
            <type>String</type>
            <required>true</required>
            <description>Last name for new tribute definition.</description>
          </field>
          <field>
            <name>Gift.Tribute.TributeDefinition.Type</name>
            <type>String</type>
            <required>true</required>
            <description>Tribute type to map to in backoffice.  Must match existing tribute type.</description>
          </field>
          <field>
            <name>Gift.Tribute.TributeDefinition.Description</name>
            <type>String</type>
            <required>true</required>
            <description>Description for new tribute definition.</description>
          </field>
          <field>
            <name>Gift.Tribute.Acknowledgee.FirstName</name>
            <type>String</type>
            <description>First name for tribute acknowledgee.</description>
          </field>
          <field>
            <name>Gift.Tribute.Acknowledgee.LastName</name>
            <type>String</type>
            <required>true</required>
            <description>Last name for tribute acknowledgee.</description>
          </field>
          <field>
            <name>Gift.Tribute.Acknowledgee.Country</name>
            <type>String</type>
            <required>true</required>
            <description>Country for tribute acknowledgee address.</description>
          </field>
          <field>
            <name>Gift.Tribute.Acknowledgee.AddressLines</name>
            <type>String</type>
            <required>true</required>
            <description>Address lines for tribute acknowledgee address.</description>
          </field>
          <field>
            <name>Gift.Tribute.Acknowledgee.City</name>
            <type>String</type>
            <required>true</required>
            <description>City for tribute acknowledgee address.</description>
          </field>
          <field>
            <name>Gift.Tribute.Acknowledgee.State</name>
            <type>String</type>
            <required>true</required>
            <description>State for tribute acknowledgee address.</description>
          </field>
          <field>
            <name>Gift.Tribute.Acknowledgee.PostalCode</name>
            <type>String</type>
            <required>true</required>
            <description>Postal code for tribute acknowledgee address.</description>
          </field>
          <field>
            <name>Gift.Tribute.Acknowledgee.Phone</name>
            <type>String</type>
            <description>Phone number for tribute acknowledgee.</description>
          </field>
          <field>
            <name>Gift.Tribute.Acknowledgee.Email</name>
            <type>String</type>
            <description>Email address for tribute acknowledgee.</description>
          </field>
          <field>
            <name>Gift.IsCorporate</name>
            <type>Boolean</type>
            <description>Indicates that the gift is given on behalf of a company. When true, the Corporate merge fields are displayed as opposed to the Individual merge fields. Cannot process if Donation Form is using a Payment 2.0 Part.</description>
          </field>
          <field>
            <name>Origin</name>
            <required>true</required>
            <description>Information about the origin of the transaction.</description>
          </field>
          <field>
            <name>Origin.AppealId</name>
            <type>GUID</type>
            <description>Id of an appeal to associate with the donation.</description>
          </field>
          <field>
            <name>Origin.PageId</name>
            <type>Integer</type>
            <description>Id of the BBIS page hosting the donation form.</description>
          </field>
          <field>
            <name>Origin.PageName</name>
            <type>String</type>
            <required>true</required>
            <description>Name of the web page hosting the donation form.</description>
          </field>
          <field>
            <name>BBSPReturnUri</name>
            <type>String</type>
            <description>The Uri that Blackbaud secured payment should redirect to after completing the payment.  Required for credit card transactions. Exclude if Donation Form is using a Payment 2.0 Part.</description>
          </field>
          <field>
            <name>BBSPTemplateSitePageId</name>
            <type>Integer</type>
            <description>Id of the BBIS page that should be used as the page template in Blackbaud secured payment.  This page must contain certain BBSP-integrated part types for the page template to be usable, such as the Advanced Donation Form. Exclude if Donation Form is using a Payment 2.0 Part.</description>
          </field>
          <field>
            <name>MerchantAccountId</name>
            <type>GUID</type>
            <required>true</required>
            <description>Id of the merchant account that should be used to process the donation. Exclude if Donation Form is using a Payment 2.0 Part.</description>
          </field>
        </fields>
        <example>
          <![CDATA[
{
"Id": "3439a5c7-9977-4f9c-ba11-fadfb8144d35"
}
]]>
        </example>
      </post>
      <responses>

        <response>
          <status>200 OK</status>
          <body>CreateDonationReply</body>
          <description>Returns a CreateDonationReply object containing information about the created donation and optionally a Uri for completing payment of the donation with Blackbaud secured payment. A location header is also returned containing a Uri of the new donation object.  If the part is configured to use a Payment 2.0 page, the reply will contain a URI to the selected payment page instead of a secure payment URI.</description>
        </response>
      </responses>
      <exampleResponses>
        <exampleResponse>
          <name>Success</name>
          <status>201 OK</status>
          <location>http://www.mydomain.com/webapi/123/Donation/853f96be-bf08-4828-aefa-326a06e48d31</location>
          <body>
            <![CDATA[]]>
          </body>
        </exampleResponse>
		</exampleResponses>
		<responses>
		        <response>
          <status>400 Bad Request</status>
          <body>Error[]</body>
          <description>
            <![CDATA[A validation error was found with the post data or an error occurred in the processing.  Returns an array of Errror objects.  Possible Errors:
<ul>
<li>RecordNotFound (106)</li>
<li>RequiredFieldMissing (101)</li>
<li>InvalidFieldSupplied (102)</li>
<li>ValueBelowMinimum (103)</li>
<li>ValueExceedsMaximum (104)</li>
<li>ValueNotAllowed (105)</li>
<li>ExceedsMaximumLength (107)</li>
</ul>
]]>
          </description>
        </response></responses>
		<exampleResponses>
        <exampleResponse>
          <name>Error</name>
          <status>400 Bad Request</status>
          <body>
            <![CDATA[
[
	{
		"ErrorCode":101,
		"Field":"Donor.LastName",
		"Message":null
	},
	{
		"ErrorCode":103,
		"Field":"Gift.Designations.Amount",
		"Message":"A designation's amount should be greater than 0."
	}
]
]]>
          </body>
        </exampleResponse>
      </exampleResponses>
    </endpoint>
    <endpoint>
      <url>ADFCheckout/PublicKey</url>
      <method>POST</method>
      <behavior>To open the checkout pop up there is a key that we have to pass in payment api to initiate the Checkout library request.</behavior>
      <!--  <fields>
          <field>
            <name>ResetKey</name>
            <required>true</required>
            <description>Reset key on BBSP server.</description>
          </field>
        </fields>-->
        <example>

        </example>
      <responses>
        <response>
          <status>200 OK</status>
          <body>HttpResponseMessage</body>
          <description>Returns a HttpResponseMessage object containing information about the public key.</description>
        </response>
      </responses>
      <exampleResponses>
        <exampleResponse>
          <name>Success</name>
          <status>200 OK</status>
          <location>http://www.mydomain.com/webapi/123/Donation/853f96be-bf08-4828-aefa-326a06e48d31</location>
          <body>
          <![CDATA[
{
"Success":true,
"Exceptions":{"Errors":[],"Success":true},
"Data":"{\"PublicKey\":\"ca24c166-29a2-44d4-b4d0-32646e51bbb1\"}"
}
]]>
          </body>
        </exampleResponse>
		</exampleResponses>
		<responses>
		        <response>
          <status>400 Bad Request</status>
          <body>Error[]</body>
          <description>
            <![CDATA[A validation error was found with the post data or an error occurred in the processing.  Returns an array of Errror objects.  Possible Errors:
<ul>
<li>RecordNotFound (106)</li>
<li>RequiredFieldMissing (101)</li>
<li>InvalidFieldSupplied (102)</li>
<li>ValueBelowMinimum (103)</li>
<li>ValueExceedsMaximum (104)</li>
<li>ValueNotAllowed (105)</li>
<li>ExceedsMaximumLength (107)</li>
</ul>
]]>
          </description>
        </response></responses>

        <exampleResponses>
		<exampleResponse>
          <name>Error</name>
          <status>400 Bad Request</status>
          <body>
            <![CDATA[
[
	{
		"ErrorCode":101,
		"Field":"Donor.LastName",
		"Message":null
	}
]
]]>
          </body>
        </exampleResponse>
      </exampleResponses>
    </endpoint>
    <endpoint>
      <url>ADFCheckout/Delete</url>
      <method>POST</method>
      <behavior>When we close the checkout pop up the previously saved transaction deletes from CMSTransactionState table.</behavior>
      <post>
        <fields>
          <field>
            <name>Id</name>
            <required>true</required>
            <description>Transaction Id</description>
          </field>
        </fields>
        <example>
          <![CDATA[
{
"Id": "3439a5c7-9977-4f9c-ba11-fadfb8144d35"
}
]]>
        </example>
      </post>
      <responses>
        <response>
          <status>200 OK</status>
          <body>HttpResponseMessage</body>
          <description>Returns a HttpResponseMessage object containing information about the public key.</description>
        </response>
      </responses>
      <exampleResponses>
        <exampleResponse>
          <name>Success</name>
          <status>200 OK</status>
          <location>http://www.mydomain.com/webapi/123/Donation/853f96be-bf08-4828-aefa-326a06e48d31</location>
          <body>
            <![CDATA[
]]>
          </body>
        </exampleResponse>
		</exampleResponses>
		<responses>
		        <response>
          <status>400 Bad Request</status>
          <body>Error[]</body>
          <description>
            <![CDATA[A validation error was found with the post data or an error occurred in the processing.  Returns an array of Errror objects.  Possible Errors:
<ul>
<li>RecordNotFound (106)</li>
<li>RequiredFieldMissing (101)</li>
<li>InvalidFieldSupplied (102)</li>
<li>ValueBelowMinimum (103)</li>
<li>ValueExceedsMaximum (104)</li>
<li>ValueNotAllowed (105)</li>
<li>ExceedsMaximumLength (107)</li>
</ul>
]]>
          </description>
        </response></responses>
		<exampleResponses>
        <exampleResponse>
          <name>Error</name>
          <status>400 Bad Request</status>
          <body>
            <![CDATA[
[
	{
		"ErrorCode":101,
		"Field":"Donor.LastName",
		"Message":null
	}
]
]]>
          </body>
        </exampleResponse>
      </exampleResponses>
    </endpoint>
  </endpoints>
</api>
